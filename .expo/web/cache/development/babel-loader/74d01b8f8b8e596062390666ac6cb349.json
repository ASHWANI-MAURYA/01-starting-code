{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignupScreen from \"./screens/SignupScreen\";\nimport WelcomeScreen from \"./screens/WelcomeScreen\";\nimport { Colors } from \"./constants/styles\";\nimport AuthContextProvider, { AuthContext } from \"./store/auth-context\";\nimport IconButton from \"./components/ui/IconButton\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AppLoading from 'expo-app-loading';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction AuthStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.primary500\n      },\n      headerTintColor: 'white',\n      contentStyle: {\n        backgroundColor: Colors.primary100\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen\n    })]\n  });\n}\n\nfunction AuthenticatedStack() {\n  var authCtx = useContext(AuthContext);\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.primary500\n      },\n      headerTintColor: 'white',\n      contentStyle: {\n        backgroundColor: Colors.primary100\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"Welcome\",\n      component: WelcomeScreen,\n      options: {\n        headerRight: function headerRight(_ref) {\n          var tintColor = _ref.tintColor;\n          return _jsx(IconButton, {\n            icon: \"exit\",\n            color: tintColor,\n            size: 24,\n            onPress: authCtx.logout\n          });\n        }\n      }\n    })\n  });\n}\n\nfunction Navigation() {\n  var authCtx = useContext(AuthContext);\n  return _jsxs(NavigationContainer, {\n    children: [!authCtx.isAuthenticated && _jsx(AuthStack, {}), authCtx.isAuthenticated && _jsx(AuthenticatedStack, {})]\n  });\n}\n\nfunction Root() {\n  var _useState = useState(),\n      _useState2 = _toArray(_useState);\n\n  var authCtx = useContext(AuthContext);\n  useEffect(function () {\n    function fetchToken() {\n      var storeToken;\n      return _regeneratorRuntime.async(function fetchToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n            case 2:\n              storeToken = _context.sent;\n\n              if (storeToken) {\n                authCtx.authenticate(storeToken);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchToken();\n  }, []);\n  return _jsx(Navigation, {});\n}\n\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(AuthContextProvider, {\n      children: _jsx(Root, {})\n    })]\n  });\n}","map":{"version":3,"names":["useContext","useEffect","useState","NavigationContainer","createNativeStackNavigator","StatusBar","LoginScreen","SignupScreen","WelcomeScreen","Colors","AuthContextProvider","AuthContext","IconButton","AsyncStorage","AppLoading","Stack","AuthStack","headerStyle","backgroundColor","primary500","headerTintColor","contentStyle","primary100","AuthenticatedStack","authCtx","headerRight","tintColor","logout","Navigation","isAuthenticated","Root","fetchToken","getItem","storeToken","authenticate","App"],"sources":["C:/Users/ashwa/OneDrive/Desktop/01-starting-code/App.js"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport LoginScreen from './screens/LoginScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport WelcomeScreen from './screens/WelcomeScreen';\nimport { Colors } from './constants/styles';\nimport AuthContextProvider, { AuthContext } from './store/auth-context';\nimport IconButton from './components/ui/IconButton';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AppLoading from 'expo-app-loading';\nconst Stack = createNativeStackNavigator();\n\nfunction AuthStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.primary500 },\n        headerTintColor: 'white',\n        contentStyle: { backgroundColor: Colors.primary100 },\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Signup\" component={SignupScreen} />\n    </Stack.Navigator>\n  );\n}\n\nfunction AuthenticatedStack() {\n  const authCtx = useContext(AuthContext)\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.primary500 },\n        headerTintColor: 'white',\n        contentStyle: { backgroundColor: Colors.primary100 },\n      }}\n    >\n      <Stack.Screen name=\"Welcome\" component={WelcomeScreen} options={{\n        headerRight: ({ tintColor }) => <IconButton icon=\"exit\" color={tintColor} size={24} onPress={\n          authCtx.logout} />\n      }} />\n    </Stack.Navigator>\n  );\n}\n\nfunction Navigation() {\n  const authCtx = useContext(AuthContext)\n\n\n  return (\n\n    <NavigationContainer>\n      {!authCtx.isAuthenticated && <AuthStack />}\n      {authCtx.isAuthenticated && <AuthenticatedStack />}\n    </NavigationContainer>\n  );\n}\n\nfunction Root() { \n  const []=useState();\n  const authCtx=useContext(AuthContext)\n  useEffect(() => {\n    async function fetchToken() {\n\n      const storeToken = await AsyncStorage.getItem('token');\n      if (storeToken) {\nauthCtx.authenticate(storeToken);\n      }\n    }\n    fetchToken();\n  }, []);\n  return  <Navigation />;\n}\nexport default function App() {\n  \n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <AuthContextProvider>\n       <Root/>\n      </AuthContextProvider>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}